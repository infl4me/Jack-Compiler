function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto ELSE_1
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto EXIT_IF_2
label ELSE_1
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label EXIT_IF_2
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto ELSE_3
push this 4
push this 5
add
pop this 4
goto EXIT_IF_4
label ELSE_3
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto ELSE_5
push this 7
not
if-goto ELSE_7
push this 0
push constant 4
add
pop this 0
goto EXIT_IF_8
label ELSE_7
push this 1
push constant 4
add
pop this 1
label EXIT_IF_8
goto EXIT_IF_6
label ELSE_5
push this 7
not
if-goto ELSE_9
push this 0
push constant 4
sub
pop this 0
goto EXIT_IF_10
label ELSE_9
push this 1
push constant 4
sub
pop this 1
label EXIT_IF_10
label EXIT_IF_6
label EXIT_IF_4
push this 8
not
if-goto ELSE_11
push this 7
not
if-goto ELSE_13
push this 1
push constant 4
add
pop this 1
goto EXIT_IF_14
label ELSE_13
push this 0
push constant 4
add
pop this 0
label EXIT_IF_14
goto EXIT_IF_12
label ELSE_11
push this 7
not
if-goto ELSE_15
push this 1
push constant 4
sub
pop this 1
goto EXIT_IF_16
label ELSE_15
push this 0
push constant 4
sub
pop this 0
label EXIT_IF_16
label EXIT_IF_12
push this 0
push this 10
gt
not
not
if-goto ELSE_17
push constant 1
pop this 14
push this 10
pop this 0
goto EXIT_IF_18
label ELSE_17
label EXIT_IF_18
push this 0
push this 11
lt
not
not
if-goto ELSE_19
push constant 2
pop this 14
push this 11
pop this 0
goto EXIT_IF_20
label ELSE_19
label EXIT_IF_20
push this 1
push this 12
gt
not
not
if-goto ELSE_21
push constant 3
pop this 14
push this 12
pop this 1
goto EXIT_IF_22
label ELSE_21
label EXIT_IF_22
push this 1
push this 13
lt
not
not
if-goto ELSE_23
push constant 4
pop this 14
push this 13
pop this 1
goto EXIT_IF_24
label ELSE_23
label EXIT_IF_24
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto ELSE_25
push constant 10
pop local 4
goto EXIT_IF_26
label ELSE_25
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto ELSE_27
push constant 20
pop local 4
goto EXIT_IF_28
label ELSE_27
push constant 5
pop local 4
label EXIT_IF_28
label EXIT_IF_26
push this 14
push constant 1
eq
not
if-goto ELSE_29
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto EXIT_IF_30
label ELSE_29
push this 14
push constant 2
eq
not
if-goto ELSE_31
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto EXIT_IF_32
label ELSE_31
push this 14
push constant 3
eq
not
if-goto ELSE_33
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto EXIT_IF_34
label ELSE_33
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label EXIT_IF_34
label EXIT_IF_32
label EXIT_IF_30
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return